name: "Scoro"
on:
  pull_request:
    branches: [ main ]

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      scoro: ${{ steps.filter.outputs.scoro }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'frontend/**'
          scoro:
            - 'scorometer/**'
  scoro_test:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.scoro == 'true' }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Copy env file to github secret env file
        run: cp .env.example .env

      - name: Build and start the service
        run: docker-compose up -d meilisearch back db 

      - name: Perform healthchecks
        run: |
          docker-compose ps -a
          docker-compose logs
          wget --retry-connrefused http://localhost:3000 || (docker-compose logs && exit 1)

      - name: Run scorometer tests
        run: |
          export API_KEY_SCORO_TEST=SCOROTEST
          export API_KEY_SCORO=SCORO
          pip install -r scorometer/requirements.txt
          cd scorometer/tests && ./runner.sh

      - name: stop the service
        run: docker-compose down
